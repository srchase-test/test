name: RELEASE

on:
  workflow_dispatch

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: yarn install
      - name: Version
        id: version
        run: |
          yarn changeset version
          echo "porcelain=$(git status --porcelain | wc -l)" >> $GITHUB_OUTPUT
      - name: Configure AWS Credentials
        id: credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          role-session-name: SmithyTypeScriptGitHubRelease
          audience: sts.amazonaws.com
      - name: Notify 0 packages to publish
        if: steps.version.outputs.porcelain == '0'
        run: |
          aws cloudwatch put-metric-data --namespace SmithyTypeScriptPublish --metric-name NpmPackagePublishCount --value 0
      - name: Commit
        id: commit
        if: steps.version.outputs.porcelain != '0'
        run: |
          git config user.name "Chase Coalwell"
          git config user.email "782571+srchase@users.noreply.github.com"
          echo "packages=$(git diff --name-only | grep package.json | wc -l)" >> $GITHUB_OUTPUT
          git add .
          git commit -m 'Verison packages'
          git push
      - name: Fetch NPM token
        id: token
        if: steps.commit.outcome == 'success'
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids:
            NPM_TOKEN,${{ secrets.SECRET_ID }}
      - name: Release
        id: release
        uses: changesets/action@v1
        if: steps.token.outcome == 'success'
        with:
          publish: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Success Notification
        if: steps.release.outputs.published == 'true'
        env:
          PACKAGES: ${{ steps.commit.outputs.packages }}
        run: aws cloudwatch put-metric-data --namespace SmithyTypeScriptPublish --metric-name NpmPackagePublishCount --value "$PACKAGES"
      - name: Failure Notification
        if: steps.release.outputs.published != 'true' && steps.version.outputs.porcelain != '0'
        run: aws cloudwatch put-metric-data --namespace SmithyTypeScriptPublish --metric-name NpmPackagePublishFailure --value 1
